{
  "hash": "3e32c1df14a631b5f6c1b5e60a68d510",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 Homework 7\nauthor: 유은서\ndate: '2024-07-30'\ncategories:\n  - bigdata\n---\n\n## 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기\n\n- norm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정\n\n\n\n### 필요한 패키지 로드, 파일 불러서 복사본 만들기\n\n::: {#78bdb18a .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import norm\n#!pip install pyreadstat\nraw_welfare = pd.read_spss(\"C:/Users/USER/Documents/LS빅데이터/lsbigdata-project/data/koweps/Koweps_hpwc14_2019_beta2.sav\")\nraw_welfare\n\nwelfare = raw_welfare.copy()\n```\n:::\n\n\n### 컬럼 이름 바꾸기\n\n::: {#04123a6a .cell execution_count=2}\n``` {.python .cell-code}\nwelfare=welfare.rename(columns = {\n                            \"h14_g3\": \"sex\",\n                            \"h14_g4\" : \"birth\",\n                            \"h14_g10\": \"marriage_type\",\n                            \"h14_g11\": \"religion\",\n                            \"p1402_8aq1\": \"income\",\n                            \"h14_eco9\": \"code_job\",\n                            \"h14_reg7\": \"code_region\"})\n                            \nwelfare = welfare[[\"sex\", \"birth\",\"marriage_type\", \"religion\",\"income\",\"code_job\",\"code_region\"]]\n```\n:::\n\n\n### sex 컬럼 male, female로 이름 변경\n\n::: {#b0579425 .cell execution_count=3}\n``` {.python .cell-code}\nwelfare[\"sex\"] = np.where(welfare[\"sex\"] == 1, \"male\", \"female\")\nwelfare[\"sex\"].value_counts()\n\nwelfare[\"income\"].describe()\n#welfare[\"income\"].isna().sum()\n\n#sum(welfare[\"income\"] > 9998) #무응답이 nan으로 처리된것을 발견\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\ncount    4534.000000\nmean      268.455007\nstd       198.021206\nmin         0.000000\n25%       150.000000\n50%       220.000000\n75%       345.750000\nmax      1892.000000\nName: income, dtype: float64\n```\n:::\n:::\n\n\n### 성별에 따른 월급\n\n::: {#0041fc6c .cell execution_count=4}\n``` {.python .cell-code}\nsex_income = welfare.dropna(subset =\"income\") \\\n                     .groupby(\"sex\", as_index = False) \\\n                     .agg(mean_income = (\"income\", \"mean\"))\n\n\n\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 성별 월급 평균표\n\n::: {#b29e6c97 .cell execution_count=5}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.barplot(data = sex_income, x = \"sex\", y = \"mean_income\", hue = \"sex\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n### 우선적으로 필요한 모수 구하기\n\n::: {#1db7067a .cell execution_count=6}\n``` {.python .cell-code}\n# 성별마다 income 데이터프레임 만들기\nf_income = welfare.dropna(subset = \"income\") \\\n                  .query(\"sex == 'female'\")['income']\nm_income = welfare.dropna(subset = 'income') \\\n                  .query(\"sex == 'male'\")['income']\n```\n:::\n\n\n::: {#4dcb86b7 .cell execution_count=7}\n``` {.python .cell-code}\n#각 성별 평균\nf_bar = np.mean(f_income)\nm_bar = np.mean(m_income)\n```\n:::\n\n\n::: {#4c01f3ae .cell execution_count=8}\n``` {.python .cell-code}\n#표본표준편차 구하기\nf_std = np.sqrt(np.var(f_income, ddof=1))\nm_std = np.sqrt(np.var(m_income, ddof=1))\n```\n:::\n\n\n::: {#e463b19d .cell execution_count=9}\n``` {.python .cell-code}\n#성별 별 표본의 개수\nn_of_f= len(f_income)\nn_of_m= len(m_income)\n```\n:::\n\n\n### 95%\n\n::: {#4032610d .cell execution_count=10}\n``` {.python .cell-code}\na = norm.ppf(0.95, loc =0, scale = 1)\n```\n:::\n\n\n### 신뢰구간 계산하기\n\n::: {#a2a0b38d .cell execution_count=11}\n``` {.python .cell-code}\nf_left = f_bar - a * f_std/np.sqrt(n_of_f)\nf_right = f_bar + a * f_std/np.sqrt(n_of_f)\nm_left = m_bar - a * m_std/np.sqrt(n_of_m)\nm_right = m_bar + a * m_std/np.sqrt(n_of_m)\n```\n:::\n\n\n### 최종 그래프\n\n::: {#19aa6d91 .cell execution_count=12}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = \"sex\")\nplt.vlines(x = \"female\", ymin = f_left, ymax = f_right, colors = \"red\")\nplt.vlines(x = \"male\", ymin = m_left, ymax = m_right, colors = \"black\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-13-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}